version: "3.9"

services:
    # PHP-FPM runtime (Laravel)
    app:
        container_name: laravel
        build:
            context: .
            dockerfile: Dockerfile         # <-- the prod Dockerfile with multi-stage build
        env_file:
            - .env                         # make sure APP_KEY and DB_* are set
        expose:
            - "9000"                       # internal to the network; no public port
        restart: unless-stopped
        depends_on:
            - mysql
            - redis

    # Nginx (serves public/ and proxies PHP to app:9000)
    web:
        container_name: nginx
        image: nginx:1.27-alpine
        depends_on:
            - app
        ports:
            - "80:80"                      # publish only HTTP (terminate TLS upstream or add 443 here)
            # - "443:443"                  # enable if you manage TLS in this container
        volumes:
            - ./docker/nginx.conf:/etc/nginx/nginx.conf:ro
            # In true production, prefer baking code/assets into the image.
            # If you need a quick start, you can bind-mount the code read-only:
            - ./:/var/www/html:ro
        restart: unless-stopped

    # MySQL (no public port in prod; access from app only)
    mysql:
        container_name: mysql
        image: mysql/mysql-server:8.0
        environment:
            MYSQL_ROOT_PASSWORD: "${DB_PASSWORD}"
            MYSQL_ROOT_HOST: "%"
            MYSQL_DATABASE: "${DB_DATABASE}"
            MYSQL_USER: "${DB_USERNAME}"
            MYSQL_PASSWORD: "${DB_PASSWORD}"
            MYSQL_ALLOW_EMPTY_PASSWORD: 1
        expose:
            - "3306"                       # internal only (remove if not needed)
        restart: unless-stopped
        healthcheck:
            test: ["CMD", "mysqladmin", "ping", "-p${DB_PASSWORD}"]
            retries: 3
            timeout: 5s

    # Redis (internal only)
    redis:
        container_name: redis
        image: redis:alpine
        expose:
            - "6379"
        restart: unless-stopped
        healthcheck:
            test: ["CMD", "redis-cli", "ping"]
            retries: 3
            timeout: 5s
